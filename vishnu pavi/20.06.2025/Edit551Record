

CREATE OR ALTER PROCEDURE [dbo].[Edit551Record]
  @DocID VARCHAR(50),
  @TrnSapID INT,
  @MatCode VARCHAR(50),
  @Qty DECIMAL(18,2),
  @ProvisionQty DECIMAL(18,2) = NULL,
  @ProvisionValue DECIMAL(18,2) = NULL,
  @Price DECIMAL(18,2),
  @SLocCode VARCHAR(50),
  @ReasonForMovement VARCHAR(255),
  @ModifiedBy INT
AS
BEGIN
  SET NOCOUNT ON;

  DECLARE 
    @MaterialID INT,
    @SLocID INT,
    @PlantID INT;

  -- Get Plant_ID for the given transaction
  SELECT @PlantID = Plant_ID
  FROM Trn_SapTransfer_Records   -- Assuming 551 table is named like this; adjust if different
  WHERE Doc_ID = @DocID AND Trn_Sap_ID = @TrnSapID;

  -- Validate Plant exists
  IF @PlantID IS NULL
  BEGIN
    RAISERROR('Transaction not found or invalid DocID/TrnSapID.', 16, 1);
    RETURN;
  END

  -- Resolve MaterialID for the given plant
  SELECT @MaterialID = Material_ID
  FROM Mst_Material
  WHERE Material_Code = @MatCode AND Plant_ID = @PlantID;

  IF @MaterialID IS NULL
  BEGIN
    RAISERROR('Material does not belong to the plant.', 16, 1);
    RETURN;
  END

  -- Resolve SLoc_ID for the given plant
  SELECT @SLocID = SLoc_ID
  FROM Mst_Storage_Location
  WHERE Storage_Code = @SLocCode AND Plant_ID = @PlantID;

  IF @SLocID IS NULL
  BEGIN
    RAISERROR('Storage Location not found for the given plant.', 16, 1);
    RETURN;
  END

  -- Optional: Check duplicate Material in same Doc_ID (excluding current TrnSapID)
  IF EXISTS (
    SELECT 1 
    FROM Trn_SapTransfer_Records
    WHERE Doc_ID = @DocID
      AND Material_ID = @MaterialID
      AND Trn_Sap_ID <> @TrnSapID
  )
  BEGIN
    RAISERROR('Material already exists in the same document.', 16, 1);
    RETURN;
  END

  -- Perform the update

UPDATE Trn_SapTransfer_Records
SET 
  Material_ID = @MaterialID,
  Qty = ISNULL(@Qty, Qty),              -- change here
  Provision_Qty = ISNULL(@ProvisionQty, Provision_Qty),
  Provision_Value = ISNULL(@ProvisionValue, Provision_Value),
  Rate_PerPart = ISNULL(@Price, Rate_PerPart),  -- change here
  SLoc_ID = @SLocID,
  Reason_For_Movt = @ReasonForMovement,
  Modified_By = @ModifiedBy,
  Modified_On = GETDATE()
WHERE Doc_ID = @DocID AND Trn_Sap_ID = @TrnSapID;


END
GO
