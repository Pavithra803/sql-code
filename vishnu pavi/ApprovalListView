ALTER PROCEDURE [dbo].[ApprovalListView]
    @User_Level INT,
    @Plant_ID INT,
    @Role_ID INT
AS
BEGIN
    SET NOCOUNT ON;

    -- Map Role_ID to Approval_Level (starting from 2 because Level 1 is requestor)
    DECLARE @Approval_Level INT;
    SET @Approval_Level = 
        CASE @Role_ID
            WHEN 3 THEN 2
            WHEN 4 THEN 3
            WHEN 5 THEN 4
            WHEN 6 THEN 5
            WHEN 7 THEN 6
            ELSE NULL
        END;

    -- Exit early if role has no mapped level
    IF @Approval_Level IS NULL
        RETURN;

    -- Get only the approval rows that match:
    -- - Pending
    -- - This approver's level
    -- - Previous level (if any) has been Approved
    SELECT 
        p.Plant_Code,
        FORMAT(d.Created_On, 'dd-MM-yyyy') AS Date,
        mt.Movement_Name AS Movement_Type,
        u.User_Name AS Request_By,
        d.Approval_Status AS Status,
        ah.Plant_ID,
        ah.Doc_ID,
        ah.Movement_ID,
        ah.Approver_ID,
        ah.Approval_Level,
        ah.Approver_Status
    FROM Trn_Document d
    INNER JOIN Trn_Approval_History ah 
        ON ah.Doc_ID = d.Doc_ID 
        AND ah.Plant_ID = d.Plant_ID 
        AND ah.Movement_ID = d.Movement_ID
    LEFT JOIN Mst_Movement_Type mt ON mt.Movement_ID = d.Movement_ID
    LEFT JOIN Mst_Plant p ON p.Plant_ID = d.Plant_ID
    LEFT JOIN mst_user u ON u.User_ID = d.Created_By
    WHERE ah.Plant_ID = @Plant_ID
      AND ah.Approver_Status = 'Pending'
      AND ah.Approval_Level = @Approval_Level
      AND NOT EXISTS (
          SELECT 1
          FROM Trn_Approval_History prev
          WHERE prev.Doc_ID = ah.Doc_ID
            AND prev.Plant_ID = ah.Plant_ID
            AND prev.Movement_ID = ah.Movement_ID
            AND prev.Approval_Level = ah.Approval_Level - 1
            AND prev.Approver_Status <> 'Approved'
      );
END
